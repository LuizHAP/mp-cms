/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Slider = {
  _id: string
  _type: 'slider'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  subtitle?: string
  buttonLabel?: string
  buttonLink?: string
  order?: number
  displayPage?: 'homepage' | 'deals'
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type EquipmentGuide = {
  _id: string
  _type: 'equipmentGuide'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  heroContent?: string
  heroEquipment?: never
  sections?: Array<{
    sectionTitle?: string
    sectionContent?: Array<
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?: 'normal' | 'h4' | 'h5' | 'h6' | 'blockquote'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            target?: '_self' | '_blank'
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | ({
          _key: string
        } & YouTube)
      | ({
          _key: string
        } & Banner)
      | ({
          _key: string
        } & Callout)
      | ({
          _key: string
        } & CodeEmbed)
      | ({
          _key: string
        } & Table)
    >
    equipment?: Array<never>
    buttonLabel?: string
    buttonLink?: string
    _type: 'section'
    _key: string
  }>
  metaTitle?: string
  metaDescription?: string
}

export type LegalPage = {
  _id: string
  _type: 'legalPage'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  summary?: string
  lastUpdated?: string
  sections?: Array<{
    sectionTitle?: string
    legalText?: Array<
      | {
          children?: Array<{
            marks?: Array<string>
            text?: string
            _type: 'span'
            _key: string
          }>
          style?: 'normal' | 'h4' | 'h5'
          listItem?: 'bullet' | 'number'
          markDefs?: Array<{
            href?: string
            target?: '_self' | '_blank'
            _type: 'link'
            _key: string
          }>
          level?: number
          _type: 'block'
          _key: string
        }
      | ({
          _key: string
        } & Table)
    >
    basicallySummary?: Array<{
      children?: Array<{
        marks?: Array<string>
        text?: string
        _type: 'span'
        _key: string
      }>
      style?: 'normal'
      listItem?: 'bullet' | 'number'
      markDefs?: Array<{
        href?: string
        target?: '_self' | '_blank'
        _type: 'link'
        _key: string
      }>
      level?: number
      _type: 'block'
      _key: string
    }>
    _type: 'section'
    _key: string
  }>
  metaTitle?: string
  metaDescription?: string
}

export type CodeEmbed = {
  _type: 'codeEmbed'
  title?: string
  code?: string
}

export type Callout = {
  _type: 'callout'
  title?: string
  description?: string
  type?: 'info' | 'success' | 'warning' | 'error' | 'tip'
}

export type Banner = {
  _type: 'banner'
  title?: string
  description?: string
  buttonLabel?: string
  buttonLink?: string
}

export type YouTube = {
  _type: 'youTube'
  url?: string
}

export type Table = {
  _type: 'table'
  rows?: Array<
    {
      _key: string
    } & TableRow
  >
}

export type TableRow = {
  _type: 'tableRow'
  cells?: Array<string>
}

export type Color = {
  _type: 'color'
  hex?: string
  alpha?: number
  hsl?: HslaColor
  hsv?: HsvaColor
  rgb?: RgbaColor
}

export type RgbaColor = {
  _type: 'rgbaColor'
  r?: number
  g?: number
  b?: number
  a?: number
}

export type HsvaColor = {
  _type: 'hsvaColor'
  h?: number
  s?: number
  v?: number
  a?: number
}

export type HslaColor = {
  _type: 'hslaColor'
  h?: number
  s?: number
  l?: number
  a?: number
}

export type Code = {
  _type: 'code'
  language?: string
  filename?: string
  code?: string
  highlightedLines?: Array<number>
}

export type MediaTag = {
  _id: string
  _type: 'media.tag'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: Slug
}

export type OsModels = string

export type TranslationMetadata = {
  _id: string
  _type: 'translation.metadata'
  _createdAt: string
  _updatedAt: string
  _rev: string
  translations?: Array<
    {
      _key: string
    } & InternationalizedArrayReferenceValue
  >
  schemaTypes?: Array<string>
}

export type InternationalizedArrayReferenceValue = {
  _type: 'internationalizedArrayReferenceValue'
  value?:
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'blogPost'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'caseStudy'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'blogCategory'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'press'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'teamMember'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'testimonial'
      }
    | {
        _ref: string
        _type: 'reference'
        _weak?: boolean
        [internalGroqTypeReferenceTo]?: 'faq'
      }
}

export type Faq = {
  _id: string
  _type: 'faq'
  _createdAt: string
  _updatedAt: string
  _rev: string
  question?: string
  answer?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      target?: '_self' | '_blank'
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  publishedOn?: string
}

export type Testimonial = {
  _id: string
  _type: 'testimonial'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  company?: string
  state?:
    | 'AL'
    | 'AK'
    | 'AZ'
    | 'AR'
    | 'CA'
    | 'CO'
    | 'CT'
    | 'DE'
    | 'FL'
    | 'GA'
    | 'HI'
    | 'ID'
    | 'IL'
    | 'IN'
    | 'IA'
    | 'KS'
    | 'KY'
    | 'LA'
    | 'ME'
    | 'MD'
    | 'MA'
    | 'MI'
    | 'MN'
    | 'MS'
    | 'MO'
    | 'MT'
    | 'NE'
    | 'NV'
    | 'NH'
    | 'NJ'
    | 'NM'
    | 'NY'
    | 'NC'
    | 'ND'
    | 'OH'
    | 'OK'
    | 'OR'
    | 'PA'
    | 'RI'
    | 'SC'
    | 'SD'
    | 'TN'
    | 'TX'
    | 'UT'
    | 'VT'
    | 'VA'
    | 'WA'
    | 'WV'
    | 'WI'
    | 'WY'
  city?: string
  rating?: 1 | 2 | 3 | 4 | 5
  review?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type Press = {
  _id: string
  _type: 'press'
  _createdAt: string
  _updatedAt: string
  _rev: string
  language?: string
  title?: string
  slug?: Slug
  postSummary?: string
  externalLink?: string
  postBody?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          target?: '_self' | '_blank'
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        link?: {
          href?: string
          target?: '_self' | '_blank'
        }
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & YouTube)
    | ({
        _key: string
      } & Banner)
    | ({
        _key: string
      } & CodeEmbed)
    | ({
        _key: string
      } & Table)
  >
  createdOn?: string
  publishedOn?: string
  metaTitle?: string
  metaDescription?: string
}

export type CaseStudy = {
  _id: string
  _type: 'caseStudy'
  _createdAt: string
  _updatedAt: string
  _rev: string
  language?: string
  title?: string
  slug?: Slug
  postSummary?: string
  postBody?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          target?: '_self' | '_blank'
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        link?: {
          href?: string
          target?: '_self' | '_blank'
        }
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & YouTube)
    | ({
        _key: string
      } & Banner)
    | ({
        _key: string
      } & Callout)
    | ({
        _key: string
      } & CodeEmbed)
    | ({
        _key: string
      } & Table)
  >
  company?: string
  state?:
    | 'AL'
    | 'AK'
    | 'AZ'
    | 'AR'
    | 'CA'
    | 'CO'
    | 'CT'
    | 'DE'
    | 'FL'
    | 'GA'
    | 'HI'
    | 'ID'
    | 'IL'
    | 'IN'
    | 'IA'
    | 'KS'
    | 'KY'
    | 'LA'
    | 'ME'
    | 'MD'
    | 'MA'
    | 'MI'
    | 'MN'
    | 'MS'
    | 'MO'
    | 'MT'
    | 'NE'
    | 'NV'
    | 'NH'
    | 'NJ'
    | 'NM'
    | 'NY'
    | 'NC'
    | 'ND'
    | 'OH'
    | 'OK'
    | 'OR'
    | 'PA'
    | 'RI'
    | 'SC'
    | 'SD'
    | 'TN'
    | 'TX'
    | 'UT'
    | 'VT'
    | 'VA'
    | 'WA'
    | 'WV'
    | 'WI'
    | 'WY'
  city?: string
  featuredImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  createdOn?: string
  publishedOn?: string
  relatedModels?: Array<string>
  metaTitle?: string
  metaDescription?: string
}

export type BlogPost = {
  _id: string
  _type: 'blogPost'
  _createdAt: string
  _updatedAt: string
  _rev: string
  language?: string
  title?: string
  slug?: Slug
  category?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'blogCategory'
  }
  postSummary?: string
  postBody?: Array<
    | {
        children?: Array<{
          marks?: Array<string>
          text?: string
          _type: 'span'
          _key: string
        }>
        style?: 'normal' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
        listItem?: 'bullet' | 'number'
        markDefs?: Array<{
          href?: string
          target?: '_self' | '_blank'
          _type: 'link'
          _key: string
        }>
        level?: number
        _type: 'block'
        _key: string
      }
    | {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
        }
        hotspot?: SanityImageHotspot
        crop?: SanityImageCrop
        caption?: string
        alt?: string
        link?: {
          href?: string
          target?: '_self' | '_blank'
        }
        _type: 'image'
        _key: string
      }
    | ({
        _key: string
      } & YouTube)
    | ({
        _key: string
      } & Banner)
    | ({
        _key: string
      } & Callout)
    | ({
        _key: string
      } & CodeEmbed)
    | ({
        _key: string
      } & Table)
  >
  featuredImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  popular?: boolean
  featured?: boolean
  createdOn?: string
  publishedOn?: string
  author?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'teamMember'
  }
  relatedModels?: Array<string>
  relatedPosts?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'blogPost'
  }>
  metaTitle?: string
  metaDescription?: string
}

export type TeamMember = {
  _id: string
  _type: 'teamMember'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  jobTitle?: string
  bio?: string
  linkedin?: string
  avatar?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
}

export type BlogCategory = {
  _id: string
  _type: 'blogCategory'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  description?: string
  thumbnailImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    alt?: string
    _type: 'image'
  }
  color?:
    | 'blue'
    | 'cyan'
    | 'grape'
    | 'gray'
    | 'green'
    | 'indigo'
    | 'lime'
    | 'orange'
    | 'pink'
    | 'red'
    | 'teal'
    | 'violet'
    | 'yellow'
    | 'brand'
  metaTitle?: string
  metaDescription?: string
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type InternationalizedArrayReference = Array<
  {
    _key: string
  } & InternationalizedArrayReferenceValue
>

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Slider
  | EquipmentGuide
  | LegalPage
  | CodeEmbed
  | Callout
  | Banner
  | YouTube
  | Table
  | TableRow
  | Color
  | RgbaColor
  | HsvaColor
  | HslaColor
  | Code
  | MediaTag
  | OsModels
  | TranslationMetadata
  | InternationalizedArrayReferenceValue
  | Faq
  | Testimonial
  | Press
  | CaseStudy
  | BlogPost
  | TeamMember
  | BlogCategory
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Slug
  | InternationalizedArrayReference
export declare const internalGroqTypeReferenceTo: unique symbol
